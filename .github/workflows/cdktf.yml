name: cdktf

on:
  workflow_dispatch:
  pull_request:
    branches:
      - mainline
    paths:
      - cloud/cdktf/**
      - .github/workflows/cdktf.yml
  push:
    branches:
      - mainline
    paths:
      - cloud/cdktf/**
      - .github/workflows/cdktf.yml

env:
  TERRAFORM_BINARY_NAME: tofu

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud/cdktf

    permissions:
      pull-requests: write

    strategy:
      matrix:
        stack:
          - r2
          - website

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Install dependencies
        run: |
          npm install --global cdktf-cli
          npm install

      - name: Synthesize stacks
        run: |
          npx cdktf get
          npm run build
          npm run cdk:synth

      - name: Plan stack ${{ matrix.stack }}
        id: plan
        run: npm run cdk:plan -- --no-color --skip-synth ${{ matrix.stack }}
        env:
          TF_VAR_CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          TF_VAR_AWS_ACCESS_KEY: ${{ secrets.CLOUDFLARE_ACCESS_KEY }}
          TF_VAR_AWS_SECRET_KEY: ${{ secrets.CLOUDFLARE_SECRET_KEY }}
          TF_VAR_DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}

      - name: PR Comments
        uses: mshick/add-pr-comment@v2.8.2
        if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main' && steps.plan.outputs.stdout != ''
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message-id: ${{ github.event.pull_request.number }}/cloud/cdktf/${{ matrix.stack }}
          message-failure: Unable to post comment
          message: |
            ```
            ${{ steps.plan.outputs.stdout }}
            ```

      - name: Apply stack ${{ matrix.stack }}
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: npm run cdk:apply -- --auto-approve --no-color --skip-synth ${{ matrix.stack }}
        env:
          TF_VAR_CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          TF_VAR_AWS_ACCESS_KEY: ${{ secrets.CLOUDFLARE_ACCESS_KEY }}
          TF_VAR_AWS_SECRET_KEY: ${{ secrets.CLOUDFLARE_SECRET_KEY }}
          TF_VAR_DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
